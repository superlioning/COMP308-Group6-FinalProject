trigger:
- main

pool:
  name: self-hosted-centennial

stages:
- stage: Prepare
  jobs:
  - job: Prepare
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

- stage: Build
  jobs:
  - job: Build
    steps:
    - script: |
        cd client
        npm install
        npm run build
      displayName: 'Build React App'

    - script: |
        cd server
        npm install
      displayName: 'Install Dependencies for Express Server'

- stage: Test
  jobs:
  - job: Test
    steps:
    - script: |
        cd server
        npm install
        npm run test:coverage
      displayName: 'Test Application'

- stage: Deliver
  dependsOn: Build
  jobs:
  - job: Publish
    steps:
    - task: CopyFiles@2
      inputs:
        Contents: '**'
        TargetFolder: '$(build.artifactstagingdirectory)'
        
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    

- stage: DeployToDevEnv
  dependsOn: Deliver
  jobs:
  - deployment: DeployToDevEnv
    displayName: 'Deploy to dev'
    environment: 'Dev Env'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'mock deployment to dev env'

- stage: DeployToQATEnv
  dependsOn: Deliver
  jobs:
  - deployment: DeployToQATEnv
    displayName: 'Deploy to QAT'
    environment: 'QAT Env'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'mock deployment to QAT Env'

- stage: DeployToStagingEnv
  dependsOn: Deliver
  jobs:
  - deployment: DeployToStagingEnv
    displayName: 'Deploy to staging'
    environment: 'Staging Env'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'mock deployment to staging env'

- stage: DeployToProductionEnv
  dependsOn: Deliver
  jobs:
  - deployment: DeployToProductionEnv
    displayName: 'Deploy to Prod'
    environment: 'Production Env'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'mock deployment to production env'
  
